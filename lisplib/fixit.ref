
u / u n / u f / u n f   go up, i.e. more recent (n frames) (of function f)
up / up n		go up to next (nth) non-system function
d / dn			go down, i.e. less recent (opposite of u and up)
ok / go			continue after an error or debug loop
redo / redo f		resume computation from current frame (or at fn f)
step			restart in single-step mode
return e		return from call with value of e (default is nil)
edit			edit the current stack frame
editf / editf f		edit nearest fn on stack (or edit fn f)
top / bot		go to top (bottom) of stack
p / pp			show current stack frame (pretty print)
where			give current stack position
help / h / ?		print this table -- /usr/lisp/doc/fixit.ref
help ...		get the help for ...
pop / ^d		exit one level of debug (reset)

bk / bk n / bk f / bk n f /     backtrace (to nth frame) (of fn f)
..f function names only         ..a include system functions
..v show variable bindings      ..e show expressions in full
..c go no deeper than here      *** combinations are allowed ***

